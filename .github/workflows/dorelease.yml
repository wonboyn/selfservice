#######################################################
# This workflow gets triggered by the creation of a
# new release in Github (eg push of tag). The
# workflow uploads a zip file containing the source
# to the release. It performs the following tasks:
#
#    - log the git branch/commit details
#    - install Python v3.8
#    - initialize CodeQL
#    - run CodeQL analysis
#    - install dependencies
#    - perform tests
#    - zip the source folder
#    - upload the zip file to the release
#
#######################################################

name: Create release
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Variables for the build job
    env:
      dir-src: '${{ github.workspace }}/selfservicebot'
      dir-tests: '${{ github.workspace }}/selfservicebot/tests'
      file-requirements: '${{ github.workspace }}/requirements.txt'
      file-zip: '${{ github.workspace }}/selfservicebot.zip'
    
    # Build steps
    steps:
    
    # Setup git checkout
    - name: Setup Git Checkout
      uses: actions/checkout@v2
    
    # Log basic info
    - name: Log Info
      run: |
        echo Event: ${{ github.event_name }}
        echo Git Ref: ${{ github.ref }}
        echo Git SHA: ${{ github.sha }}
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    # Setup Python
    - name: Setup Python
      id: basic_info
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    # Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: python

    # Run CodeQL analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
    # Install the dependencies
    - name: Install dependencies
      run: |
        pip3 install --target=${{ env.dir-src }} -r ${{ env.file-requirements }}
        echo Source Directory: 
        ls -al ${{ env.dir-src }}

    # Run the tests
    # TODO!!!
    
    # Zip the source
    - name: Zip It
      run: |
        cd ${{ env.dir-src }}
        zip -r ${{ env.file-zip }} .

    # Upload release asset
    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.file-zip }}
        asset_name: SelfServiceBot-${{ steps.basic_info.outputs.VERSION }}
        asset_content_type: application/zip